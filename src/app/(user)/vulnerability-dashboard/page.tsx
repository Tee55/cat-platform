"use client";

import React, { useState } from "react";
import { AlertTriangle, Server, Radio, ArrowRightLeft } from "lucide-react";
import StatusCard from "@/components/card/StatusCard";
import VulnerabilityChart from "@/components/VulnerabilityChart";
import ActiveSecurityAlerts from "@/components/ActiveSecurityAlerts";
import PluginTable from "@/components/PluginTable";
import ServicesTable from "@/components/ServicesTable";
import SummaryStats from "@/components/SummaryStats";
import CriticalVulnerabilitiesPanel from "@/components/CriticalVulnerabilitiesPanel";
import HighVulnerabilitiesPanel from "@/components/HighVulnerabilitiesPanel";
import VulnerabilityModal from "@/components/VulnerabilityModal";
import { useScanBatch } from "@/hooks/useScanBatch";
import { Loader2 } from "lucide-react";
import { LoadingScreen } from "@/components/Loading";
import { useSearchParams } from "next/navigation";

const VulnerabilityDashboard = () => {
  const searchParams = useSearchParams();
  const scanBatchId = searchParams.get("batchId");
  const {
    criticalVulnerabilities,
    highVulnerabilities,
    mediumVulnerabilities,
    lowVulnerabilities,
    infoVulnerabilities,
    vulnerabilities,
    vulnerabilityPorts,
    severities,
    serviceNames,
    assets,
    plugins,
    osVersions,
    loading,
  } = useScanBatch(scanBatchId ?? "");

  // Modal state
  const [isInfoDialogOpen, setInfoDialogIsOpen] = useState<boolean>(false);
  const [selectedAssetDialog, setSelectedAssetDialog] = useState<string>("All");
  const [selectedSeverityDialog, setSelectedSeverityDialog] =
    useState<string>("");

  // Asset selectors
  const [selectedAssetPlugin, setSelectedAssetPlugin] = useState<string>("All");
  const [selectedAssetUser, setSelectedAssetUser] = useState<string>("All");
  const [
    selectedAssetActiveSecurityAlerts,
    setSelectedAssetActiveSecurityAlerts,
  ] = useState<string>("All");

  const handleOpenDialog = (entry: {
    name: string;
    color: string;
    value: number;
  }) => {
    setSelectedSeverityDialog(entry.name);
    setSelectedAssetDialog("All");
    setInfoDialogIsOpen(true);
  };

  const handleCloseDialog = () => {
    setInfoDialogIsOpen(false);
    setSelectedAssetDialog("All");
  };

  if (loading) {
    return (
      <LoadingScreen />
    );
  }

  return (
    <main className="mx-auto max-w-7xl space-y-6 p-6 text-gray-900 dark:text-gray-100">
      {/* Title */}
      <header>
        <h1 className="mb-6 text-4xl font-extrabold tracking-tight">
          Vulnerability Scan
        </h1>
      </header>

      {/* Summary Cards */}
      <section className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-4">
        <StatusCard
          color="bg-red-600 text-white"
          data={criticalVulnerabilities.length}
          icon={<AlertTriangle className="mr-3 h-8 w-8" />}
          label="Critical Alerts"
        />
        <StatusCard
          color="bg-orange-500 text-white"
          data={highVulnerabilities.length}
          icon={<Server className="mr-3 h-8 w-8" />}
          label="High Alerts"
        />
        <StatusCard
          color="bg-blue-600 text-white"
          data={assets.length}
          icon={<Radio className="mr-3 h-8 w-8" />}
          label="Total Assets"
        />
        <StatusCard
          color="bg-green-600 text-white"
          data={plugins.length}
          icon={<ArrowRightLeft className="mr-3 h-8 w-8" />}
          label="Active Plugins"
        />
      </section>

      {/* Main Content Grid */}
      <section className="grid grid-cols-1 gap-6 lg:grid-cols-3">
        <VulnerabilityChart
          severity={severities}
          onOpenDialog={handleOpenDialog}
        />
        <CriticalVulnerabilitiesPanel
          scanVulnerabilities={criticalVulnerabilities}
        />
        <HighVulnerabilitiesPanel highVulnerabilities={highVulnerabilities} />
      </section>

      {/* Active Security Alerts Table */}
      <section>
        <ActiveSecurityAlerts
          assets={assets}
          selectedAssetName={selectedAssetActiveSecurityAlerts}
          setSelectedAssetName={setSelectedAssetActiveSecurityAlerts}
        />
      </section>

      {/* Additional Tables */}
      <section className="grid grid-cols-1 gap-6 lg:grid-cols-2">
        <PluginTable
          assets={assets}
          plugins={plugins}
          selectedAssetName={selectedAssetPlugin}
          setSelectedAssetName={setSelectedAssetPlugin}
        />
        <ServicesTable
          assets={assets}
          serviceNames={serviceNames}
          selectedAssetName={selectedAssetUser}
          setSelectedAssetName={setSelectedAssetUser}
        />
      </section>

      {/* Summary Stats */}
      <section>
        <SummaryStats
          vulnerabilityPorts={vulnerabilityPorts}
          pluginTypes={plugins}
          osVersion={osVersions}
          vulnerabilities={vulnerabilities}
          serviceNames={serviceNames}
          assets={assets}
        />
      </section>

      {/* Modal Dialog */}
      <VulnerabilityModal
        isOpen={isInfoDialogOpen}
        onClose={handleCloseDialog}
        selectedSeverityDialog={selectedSeverityDialog}
        selectedAssetDialog={selectedAssetDialog}
        setSelectedAssetDialog={setSelectedAssetDialog}
        criticalVulnerabilities={criticalVulnerabilities}
        highVulnerabilities={highVulnerabilities}
        mediumVulnerabilities={mediumVulnerabilities}
        lowVulnerabilities={lowVulnerabilities}
        infoVulnerabilities={infoVulnerabilities}
        assets={assets}
      />
    </main>
  );
};

export default VulnerabilityDashboard;

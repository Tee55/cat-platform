import React, { useMemo } from 'react';
import { SimpleDoughnut } from '@/components/chart/SimpleDoughnutChart';
import { SeverityCard } from '@/components/card/SeverityCard';
import type { SeverityCountType } from '@/shared/types';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';

interface VulnerabilityChartProps {
  severity: SeverityCountType[];
  onOpenDialog: (entry: { name: string; color: string; value: number }) => void;
}

const VulnerabilityChart: React.FC<VulnerabilityChartProps> = ({ severity, onOpenDialog }) => {
  const chartData = useMemo(
    () => [
      {
        name: 'Critical',
        value: severity.find((item) => item.severity === 'Critical')?.count ?? 0,
        color: "#f00000",
      },
      {
        name: 'High',
        value: severity.find((item) => item.severity === 'High')?.count ?? 0,
        color: "#ff9913",
      },
      {
        name: 'Medium',
        value: severity.find((item) => item.severity === 'Medium')?.count ?? 0,
        color: "#ffda13",
      },
      {
        name: 'Low',
        value: severity.find((item) => item.severity === 'Low')?.count ?? 0,
        color: "#74c365",
      },
      {
        name: 'Info',
        value: severity.find((item) => item.severity === 'Info')?.count ?? 0,
        color: "#1e90ff",
      },
    ],
    [severity],
  );

  const data = useMemo(
    () => ({
      labels: chartData.map((data) => data.name),
      datasets: [
        {
          data: chartData.map((data) => data.value),
          backgroundColor: chartData.map((data) => data.color),
          borderWidth: 1,
          cutout: '70%',
        },
      ],
    }),
    [chartData],
  );

  const options = useMemo(
    () => ({
      responsive: true,
      plugins: {
        legend: {
          display: false,
        },
        tooltip: {
          callbacks: {
            label: function (context: any) {
              const label = context.label || '';
              const value = context.raw || '';
              return `${label}: ${value}`;
            },
          },
        },
      },
    }),
    [],
  );

  const CustomLegend = () => {
    const firstTwoRows = chartData.slice(0, 4);
    const lastRow = chartData.slice(4);

    return (
      <div className="mt-6 space-y-2">
        <div className="grid grid-cols-2 gap-2">
          {firstTwoRows.map((entry, index) => (
            <SeverityCard
              handleOpen={onOpenDialog}
              entry={entry}
              key={`trigger-${index}`}
            />
          ))}
          {lastRow.map((entry, index) => (
            <SeverityCard
              handleOpen={onOpenDialog}
              entry={entry}
              key={`last-index-${index}`}
              style="col-span-2"
            />
          ))}
        </div>
      </div>
    );
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>Vulnerability Distribution</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="flex justify-center">
          <SimpleDoughnut data={data} options={options} />
        </div>
        <CustomLegend />
      </CardContent>
    </Card>
  );
};

export default VulnerabilityChart;
